warning: unused imports: `MatchOptions`, `glob_with`
 --> src/helpers/gen_funcs.rs:9:12
  |
9 | use glob::{glob_with, MatchOptions};
  |            ^^^^^^^^^  ^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `Path`
 --> src/helpers/requests.rs:7:26
  |
7 | use std::path::{Display, Path, PathBuf};
  |                          ^^^^

warning: unused import: `std::pin::pin`
 --> src/helpers/requests.rs:9:5
  |
9 | use std::pin::pin;
  |     ^^^^^^^^^^^^^

warning: the item `Path` is imported redundantly
   --> src/helpers/requests.rs:137:17
    |
7   | use std::path::{Display, Path, PathBuf};
    |                          ---- the item `Path` is already imported here
...
137 |             use std::path::Path;
    |                 ^^^^^^^^^^^^^^^

warning: unused import: `std::path::Path`
   --> src/helpers/requests.rs:137:17
    |
137 |             use std::path::Path;
    |                 ^^^^^^^^^^^^^^^

warning: unused variable: `data`
  --> src/helpers/requests.rs:87:16
   |
87 |             Ok(data) => {}
   |                ^^^^ help: if this is intentional, prefix it with an underscore: `_data`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `data`
  --> src/helpers/requests.rs:88:17
   |
88 |             Err(data) => {}
   |                 ^^^^ help: if this is intentional, prefix it with an underscore: `_data`

warning: variable does not need to be mutable
  --> src/helpers/requests.rs:77:13
   |
77 |         let mut config_path = app_path.join("pinepods_config.json");
   |             ----^^^^^^^^^^^
   |             |
   |             help: remove this `mut`
   |
   = note: `#[warn(unused_mut)]` on by default

warning: function `create_app_path` is never used
  --> src/helpers/requests.rs:70:4
   |
70 | fn create_app_path(app_path: &Display) -> std::io::Result<()> {
   |    ^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `pinepods_instance` is never read
 --> src/helpers/models.rs:6:16
  |
4 | pub struct PinepodsCheck {
  |            ------------- field in this struct
5 |     pub status_code: u16,
6 |     pub(crate) pinepods_instance: bool
  |                ^^^^^^^^^^^^^^^^^
  |
  = note: `PinepodsCheck` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: fields `status` and `retrieved_id` are never read
  --> src/helpers/models.rs:11:5
   |
10 | pub struct PinepodsUserResponse {
   |            -------------------- fields in this struct
11 |     status: String,
   |     ^^^^^^
12 |     retrieved_id: Option<i32> // Assuming id is a u32, adjust as needed. Using Option if id might not always be present.
   |     ^^^^^^^^^^^^
   |
   = note: `PinepodsUserResponse` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: `pinepods_firewood` (lib) generated 11 warnings (run `cargo fix --lib -p pinepods_firewood` to apply 7 suggestions)
   Compiling pinepods_firewood v0.1.0 (/home/collinp/Documents/GitHub/pinepods-firewood)
warning: unused imports: `debug`, `error`, `info`, `warn`
 --> src/app.rs:8:11
  |
8 | use log::{info, debug, warn, error};
  |           ^^^^  ^^^^^  ^^^^  ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `error::Error`
 --> src/main.rs:5:5
  |
5 |     error::Error,
  |     ^^^^^^^^^^^^

warning: unused import: `std::fmt::format`
  --> src/main.rs:11:5
   |
11 | use std::fmt::format;
   |     ^^^^^^^^^^^^^^^^

warning: unused import: `std::thread::sleep`
  --> src/main.rs:12:5
   |
12 | use std::thread::sleep;
   |     ^^^^^^^^^^^^^^^^^^

warning: unused imports: `ExecutableCommand`, `KeyEventKind`
  --> src/main.rs:15:56
   |
15 |     event::{self, DisableMouseCapture, Event, KeyCode, KeyEventKind},
   |                                                        ^^^^^^^^^^^^
...
18 |     ExecutableCommand
   |     ^^^^^^^^^^^^^^^^^

warning: unused import: `Paragraph`
  --> src/main.rs:25:90
   |
25 |     widgets::{Block, BorderType, Borders, Cell, Gauge, List, ListItem, Row, Table, Tabs, Paragraph},
   |                                                                                          ^^^^^^^^^

warning: unused import: `std::ops::Not`
  --> src/main.rs:31:5
   |
31 | use std::ops::Not;
   |     ^^^^^^^^^^^^^

warning: unused import: `stderr`
  --> src/main.rs:32:22
   |
32 | use std::io::{Write, stderr, Result};
   |                      ^^^^^^

warning: unused import: `serde_json::to_string`
  --> src/main.rs:34:5
   |
34 | use serde_json::to_string;
   |     ^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `debug`, `info`, `warn`
  --> src/main.rs:36:11
   |
36 | use log::{info, debug, warn, error};
   |           ^^^^  ^^^^^  ^^^^

warning: unnecessary parentheses around function argument
   --> src/main.rs:121:50
    |
121 |                     let url_build = String::from((format!("{}{}{}", web_protocol.to_lowercase().trim(), "://", hostname.trim())));
    |                                                  ^                                                                             ^
    |
    = note: `#[warn(unused_parens)]` on by default
help: remove these parentheses
    |
121 -                     let url_build = String::from((format!("{}{}{}", web_protocol.to_lowercase().trim(), "://", hostname.trim())));
121 +                     let url_build = String::from(format!("{}{}{}", web_protocol.to_lowercase().trim(), "://", hostname.trim()));
    |

warning: unused import: `Stylize`
  --> src/main.rs:21:33
   |
21 |     prelude::{CrosstermBackend, Stylize, Terminal, Backend},
   |                                 ^^^^^^^

warning: unused import: `Write`
  --> src/main.rs:32:15
   |
32 | use std::io::{Write, stderr, Result};
   |               ^^^^^

warning: unused variable: `data`
  --> src/main.rs:84:17
   |
84 |             Err(data) => {
   |                 ^^^^ help: if this is intentional, prefix it with an underscore: `_data`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `data`
   --> src/main.rs:133:44
    |
133 | ...                   Ok(data) => {
    |                          ^^^^ help: if this is intentional, prefix it with an underscore: `_data`

warning: unused variable: `data`
   --> src/main.rs:138:56
    |
138 | ...                   Ok(data) => { break }
    |                          ^^^^ help: if this is intentional, prefix it with an underscore: `_data`

warning: variable does not need to be mutable
  --> src/main.rs:54:9
   |
54 |     let mut shared_values = Arc::new(Mutex::new(pinepods_firewood::helpers::requests::ReqwestValues {
   |         ----^^^^^^^^^^^^^
   |         |
   |         help: remove this `mut`
   |
   = note: `#[warn(unused_mut)]` on by default

warning: variable does not need to be mutable
   --> src/main.rs:168:9
    |
168 |     let mut pinepods_values = shared_values.lock().unwrap();
    |         ----^^^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: fields `status_code` and `pinepods_instance` are never read
  --> src/main.rs:41:5
   |
40 | struct PinepodsCheck {
   |        ------------- fields in this struct
41 |     status_code: u16,
   |     ^^^^^^^^^^^
42 |     pinepods_instance: bool
   |     ^^^^^^^^^^^^^^^^^
   |
   = note: `PinepodsCheck` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis
   = note: `#[warn(dead_code)]` on by default

warning: `pinepods_firewood` (bin "pinepods_firewood") generated 19 warnings (run `cargo fix --bin "pinepods_firewood"` to apply 16 suggestions)
    Finished dev [unoptimized + debuginfo] target(s) in 3.45s
     Running `target/debug/pinepods_firewood`
[src/helpers/requests.rs:82] &config_json = Object {
    "api_key": String("xdbyq3oqDIPCWDUbCRUkFnRpelJWQqiQhb3P8y5dO2hGCuqsegThVvgKI4piCjl4\n"),
    "url": String("http://localhost:8040"),
}
[2023-11-20T12:58:52Z ERROR pinepods_firewood::helpers::requests] in return pods...
[2023-11-20T12:58:52Z ERROR pinepods_firewood] Setting up terminal...
[2023-11-20T12:58:52Z ERROR pinepods_firewood] creating app...
[2023-11-20T12:58:52Z ERROR pinepods_firewood] running app...
[2023-11-20T12:58:52Z ERROR pinepods_firewood::helpers::gen_funcs] before lock...
[2023-11-20T12:58:52Z ERROR pinepods_firewood::helpers::requests] in return pods...
[2023-11-20T12:58:52Z ERROR pinepods_firewood::helpers::gen_funcs] pods return finished...
[2023-11-20T12:58:52Z ERROR pinepods_firewood::helpers::gen_funcs] after lock...
[2023-11-20T12:58:52Z ERROR pinepods_firewood] in run_app...
thread 'main' panicked at src/helpers/gen_funcs.rs:18:10:
ERROR: Bad path provided!: Io(Os { code: 2, kind: NotFound, message: "No such file or directory" })
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
