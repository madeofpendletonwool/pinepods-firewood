warning: unused imports: `MatchOptions`, `glob_with`
 --> src/helpers/gen_funcs.rs:9:12
  |
9 | use glob::{glob_with, MatchOptions};
  |            ^^^^^^^^^  ^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `Accessor`, `Probe`, `TaggedFileExt`
  --> src/helpers/gen_funcs.rs:10:13
   |
10 | use lofty::{Accessor, Probe, TaggedFileExt};
   |             ^^^^^^^^  ^^^^^  ^^^^^^^^^^^^^

warning: unused imports: `PathBuf`, `Path`, `fs::File`, `io::BufReader`, `thread`, `time::Duration`
 --> src/helpers/music_handler.rs:2:5
  |
2 |     fs::File,
  |     ^^^^^^^^
3 |     io::BufReader,
  |     ^^^^^^^^^^^^^
4 |     path::{Path, PathBuf},
  |            ^^^^  ^^^^^^^
5 |     sync::{Arc, Mutex},
6 |     thread,
  |     ^^^^^^
7 |     time::Duration,
  |     ^^^^^^^^^^^^^^

warning: unused imports: `AudioFile`, `Probe`
  --> src/helpers/music_handler.rs:10:13
   |
10 | use lofty::{AudioFile, Probe};
   |             ^^^^^^^^^  ^^^^^

warning: unused import: `Decoder`
  --> src/helpers/music_handler.rs:11:13
   |
11 | use rodio::{Decoder, OutputStream, OutputStreamHandle, Sink};
   |             ^^^^^^^

warning: unused imports: `PathBuf`, `Path`
 --> src/helpers/queue.rs:3:12
  |
3 |     path::{Path, PathBuf},
  |            ^^^^  ^^^^^^^

warning: unused imports: `AudioFile`, `Probe`
 --> src/helpers/queue.rs:6:13
  |
6 | use lofty::{AudioFile, Probe};
  |             ^^^^^^^^^  ^^^^^

warning: unused import: `super::gen_funcs::bulk_add`
  --> src/helpers/queue.rs:10:5
   |
10 | use super::gen_funcs::bulk_add;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `std::any::Any`
 --> src/helpers/requests.rs:1:5
  |
1 | use std::any::Any;
  |     ^^^^^^^^^^^^^

warning: unused import: `Path`
 --> src/helpers/requests.rs:9:26
  |
9 | use std::path::{Display, Path, PathBuf};
  |                          ^^^^

warning: unused import: `std::pin::pin`
  --> src/helpers/requests.rs:11:5
   |
11 | use std::pin::pin;
   |     ^^^^^^^^^^^^^

warning: unused import: `std::error::Error`
  --> src/helpers/requests.rs:18:5
   |
18 | use std::error::Error;
   |     ^^^^^^^^^^^^^^^^^

warning: the item `Path` is imported redundantly
   --> src/helpers/requests.rs:189:17
    |
9   | use std::path::{Display, Path, PathBuf};
    |                          ---- the item `Path` is already imported here
...
189 |             use std::path::Path;
    |                 ^^^^^^^^^^^^^^^

warning: unused import: `std::path::Path`
   --> src/helpers/requests.rs:189:17
    |
189 |             use std::path::Path;
    |                 ^^^^^^^^^^^^^^^

warning: unused variable: `data`
   --> src/helpers/requests.rs:139:16
    |
139 |             Ok(data) => {}
    |                ^^^^ help: if this is intentional, prefix it with an underscore: `_data`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `data`
   --> src/helpers/requests.rs:140:17
    |
140 |             Err(data) => {}
    |                 ^^^^ help: if this is intentional, prefix it with an underscore: `_data`

warning: variable does not need to be mutable
   --> src/helpers/requests.rs:129:13
    |
129 |         let mut config_path = app_path.join("pinepods_config.json");
    |             ----^^^^^^^^^^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: field `music_output` is never read
  --> src/helpers/music_handler.rs:17:5
   |
16 | pub struct MusicHandle {
   |            ----------- field in this struct
17 |     music_output: Arc<(OutputStream, OutputStreamHandle)>,
   |     ^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: function `create_app_path` is never used
   --> src/helpers/requests.rs:122:4
    |
122 | fn create_app_path(app_path: &Display) -> std::io::Result<()> {
    |    ^^^^^^^^^^^^^^^

warning: field `pinepods_instance` is never read
 --> src/helpers/models.rs:6:16
  |
4 | pub struct PinepodsCheck {
  |            ------------- field in this struct
5 |     pub status_code: u16,
6 |     pub(crate) pinepods_instance: bool
  |                ^^^^^^^^^^^^^^^^^
  |
  = note: `PinepodsCheck` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: fields `status` and `retrieved_id` are never read
  --> src/helpers/models.rs:11:5
   |
10 | pub struct PinepodsUserResponse {
   |            -------------------- fields in this struct
11 |     status: String,
   |     ^^^^^^
12 |     retrieved_id: Option<i32> // Assuming id is a u32, adjust as needed. Using Option if id might not always be present.
   |     ^^^^^^^^^^^^
   |
   = note: `PinepodsUserResponse` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: structure field `PodcastID` should have a snake case name
  --> src/helpers/requests.rs:52:9
   |
52 |     pub PodcastID: i64,  // Assuming integers, change to i32 if the range is smaller
   |         ^^^^^^^^^ help: convert the identifier to snake case: `podcast_id`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: structure field `PodcastName` should have a snake case name
  --> src/helpers/requests.rs:53:9
   |
53 |     pub PodcastName: String,
   |         ^^^^^^^^^^^ help: convert the identifier to snake case: `podcast_name`

warning: structure field `ArtworkURL` should have a snake case name
  --> src/helpers/requests.rs:54:9
   |
54 |     pub ArtworkURL: String,
   |         ^^^^^^^^^^ help: convert the identifier to snake case: `artwork_url`

warning: structure field `Author` should have a snake case name
  --> src/helpers/requests.rs:55:9
   |
55 |     pub Author: String,
   |         ^^^^^^ help: convert the identifier to snake case: `author`

warning: structure field `Categories` should have a snake case name
  --> src/helpers/requests.rs:56:9
   |
56 |     pub Categories: String, // Change to Vec<String> if it's actually a JSON array
   |         ^^^^^^^^^^ help: convert the identifier to snake case (notice the capitalization): `categories`

warning: structure field `EpisodeCount` should have a snake case name
  --> src/helpers/requests.rs:57:9
   |
57 |     pub EpisodeCount: u32, // Assuming integers
   |         ^^^^^^^^^^^^ help: convert the identifier to snake case: `episode_count`

warning: structure field `FeedURL` should have a snake case name
  --> src/helpers/requests.rs:58:9
   |
58 |     pub FeedURL: String,
   |         ^^^^^^^ help: convert the identifier to snake case: `feed_url`

warning: structure field `WebsiteURL` should have a snake case name
  --> src/helpers/requests.rs:59:9
   |
59 |     pub WebsiteURL: String,
   |         ^^^^^^^^^^ help: convert the identifier to snake case: `website_url`

warning: structure field `Description` should have a snake case name
  --> src/helpers/requests.rs:60:9
   |
60 |     pub Description: String,
   |         ^^^^^^^^^^^ help: convert the identifier to snake case: `description`

warning: structure field `PodcastName` should have a snake case name
  --> src/helpers/requests.rs:65:9
   |
65 |     pub PodcastName: Option<String>, // Optional if it might not always be present
   |         ^^^^^^^^^^^ help: convert the identifier to snake case: `podcast_name`

warning: structure field `EpisodeTitle` should have a snake case name
  --> src/helpers/requests.rs:66:9
   |
66 |     pub EpisodeTitle: String,
   |         ^^^^^^^^^^^^ help: convert the identifier to snake case: `episode_title`

warning: structure field `EpisodePubDate` should have a snake case name
  --> src/helpers/requests.rs:67:9
   |
67 |     pub EpisodePubDate: String,
   |         ^^^^^^^^^^^^^^ help: convert the identifier to snake case: `episode_pub_date`

warning: structure field `EpisodeDescription` should have a snake case name
  --> src/helpers/requests.rs:68:9
   |
68 |     pub EpisodeDescription: String,
   |         ^^^^^^^^^^^^^^^^^^ help: convert the identifier to snake case: `episode_description`

warning: structure field `EpisodeArtwork` should have a snake case name
  --> src/helpers/requests.rs:69:9
   |
69 |     pub EpisodeArtwork: String,
   |         ^^^^^^^^^^^^^^ help: convert the identifier to snake case: `episode_artwork`

warning: structure field `EpisodeURL` should have a snake case name
  --> src/helpers/requests.rs:70:9
   |
70 |     pub EpisodeURL: String,
   |         ^^^^^^^^^^ help: convert the identifier to snake case: `episode_url`

warning: structure field `EpisodeDuration` should have a snake case name
  --> src/helpers/requests.rs:71:9
   |
71 |     pub EpisodeDuration: i64, // Assuming this is an integer value for duration in seconds
   |         ^^^^^^^^^^^^^^^ help: convert the identifier to snake case: `episode_duration`

warning: structure field `ListenDuration` should have a snake case name
  --> src/helpers/requests.rs:73:9
   |
73 |     pub ListenDuration: Option<i64>, // Assuming this is an integer value for listened duration in seconds
   |         ^^^^^^^^^^^^^^ help: convert the identifier to snake case: `listen_duration`

warning: structure field `EpisodeID` should have a snake case name
  --> src/helpers/requests.rs:75:9
   |
75 |     pub EpisodeID: Option<i64>,
   |         ^^^^^^^^^ help: convert the identifier to snake case: `episode_id`

warning: structure field `PodcastID` should have a snake case name
  --> src/helpers/requests.rs:76:9
   |
76 |     pub PodcastID: Option<i64>,
   |         ^^^^^^^^^ help: convert the identifier to snake case: `podcast_id`

warning: structure field `PodcastName` should have a snake case name
  --> src/helpers/requests.rs:82:5
   |
82 |     PodcastName: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `podcast_name`

warning: structure field `ArtworkURL` should have a snake case name
  --> src/helpers/requests.rs:83:5
   |
83 |     ArtworkURL: String,
   |     ^^^^^^^^^^ help: convert the identifier to snake case: `artwork_url`

warning: structure field `Description` should have a snake case name
  --> src/helpers/requests.rs:84:5
   |
84 |     Description: String, // Add this field if needed in your struct
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `description`

warning: structure field `EpisodeCount` should have a snake case name
  --> src/helpers/requests.rs:85:5
   |
85 |     EpisodeCount: u32,
   |     ^^^^^^^^^^^^ help: convert the identifier to snake case: `episode_count`

warning: structure field `WebsiteURL` should have a snake case name
  --> src/helpers/requests.rs:86:5
   |
86 |     WebsiteURL: String,
   |     ^^^^^^^^^^ help: convert the identifier to snake case: `website_url`

warning: structure field `FeedURL` should have a snake case name
  --> src/helpers/requests.rs:87:5
   |
87 |     FeedURL: String,
   |     ^^^^^^^ help: convert the identifier to snake case: `feed_url`

warning: structure field `Author` should have a snake case name
  --> src/helpers/requests.rs:88:5
   |
88 |     Author: String,
   |     ^^^^^^ help: convert the identifier to snake case: `author`

warning: structure field `Categories` should have a snake case name
  --> src/helpers/requests.rs:89:5
   |
89 |     Categories: String,
   |     ^^^^^^^^^^ help: convert the identifier to snake case (notice the capitalization): `categories`

warning: structure field `PodcastID` should have a snake case name
  --> src/helpers/requests.rs:90:5
   |
90 |     PodcastID: i64,
   |     ^^^^^^^^^ help: convert the identifier to snake case: `podcast_id`

warning: `pinepods_firewood` (lib) generated 49 warnings (run `cargo fix --lib -p pinepods_firewood` to apply 16 suggestions)
   Compiling pinepods_firewood v0.1.0 (/home/collinp/Documents/GitHub/pinepods-firewood)
warning: unused imports: `PathBuf`, `Path`, `env`
 --> src/app.rs:2:5
  |
2 |     env,
  |     ^^^
3 |     path::{Path, PathBuf},
  |            ^^^^  ^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `debug`, `info`, `warn`
 --> src/app.rs:8:11
  |
8 | use log::{info, debug, warn, error};
  |           ^^^^  ^^^^^  ^^^^

warning: unused import: `error::Error`
 --> src/main.rs:5:5
  |
5 |     error::Error,
  |     ^^^^^^^^^^^^

warning: unused import: `std::fmt::format`
  --> src/main.rs:11:5
   |
11 | use std::fmt::format;
   |     ^^^^^^^^^^^^^^^^

warning: unused import: `std::thread::sleep`
  --> src/main.rs:12:5
   |
12 | use std::thread::sleep;
   |     ^^^^^^^^^^^^^^^^^^

warning: unused imports: `ExecutableCommand`, `KeyEventKind`
  --> src/main.rs:15:56
   |
15 |     event::{self, DisableMouseCapture, Event, KeyCode, KeyEventKind},
   |                                                        ^^^^^^^^^^^^
...
18 |     ExecutableCommand
   |     ^^^^^^^^^^^^^^^^^

warning: unused import: `Paragraph`
  --> src/main.rs:25:90
   |
25 |     widgets::{Block, BorderType, Borders, Cell, Gauge, List, ListItem, Row, Table, Tabs, Paragraph},
   |                                                                                          ^^^^^^^^^

warning: unused import: `std::ops::Not`
  --> src/main.rs:31:5
   |
31 | use std::ops::Not;
   |     ^^^^^^^^^^^^^

warning: unused import: `stderr`
  --> src/main.rs:32:22
   |
32 | use std::io::{Write, stderr, Result};
   |                      ^^^^^^

warning: unused import: `serde_json::to_string`
  --> src/main.rs:34:5
   |
34 | use serde_json::to_string;
   |     ^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `debug`, `info`, `warn`
  --> src/main.rs:36:11
   |
36 | use log::{info, debug, warn, error};
   |           ^^^^  ^^^^^  ^^^^

warning: unnecessary parentheses around function argument
   --> src/main.rs:121:50
    |
121 |                     let url_build = String::from((format!("{}{}{}", web_protocol.to_lowercase().trim(), "://", hostname.trim())));
    |                                                  ^                                                                             ^
    |
    = note: `#[warn(unused_parens)]` on by default
help: remove these parentheses
    |
121 -                     let url_build = String::from((format!("{}{}{}", web_protocol.to_lowercase().trim(), "://", hostname.trim())));
121 +                     let url_build = String::from(format!("{}{}{}", web_protocol.to_lowercase().trim(), "://", hostname.trim()));
    |

error[E0308]: mismatched types
   --> src/main.rs:234:53
    |
234 | ...                   app.queue_items.add(episode, episode.EpisodeDuration);
    |                                       --- ^^^^^^^ expected `PinepodsEpisodes`, found `&PinepodsEpisodes`
    |                                       |
    |                                       arguments to this method are incorrect
    |
note: method defined here
   --> /home/collinp/Documents/GitHub/pinepods-firewood/src/helpers/queue.rs:162:12
    |
162 |     pub fn add(&mut self, pinepods_episodes: PinepodsEpisodes, episode_duration: i64) {
    |            ^^^
help: consider using clone here
    |
234 |                                 app.queue_items.add(episode.clone(), episode.EpisodeDuration);
    |                                                            ++++++++

error[E0308]: mismatched types
   --> src/main.rs:261:55
    |
261 | ...                   app.music_handle.play(i.clone());
    |                                        ---- ^^^^^^^^^ expected `&PinepodsEpisodes`, found `PinepodsEpisodes`
    |                                        |
    |                                        arguments to this method are incorrect
    |
note: method defined here
   --> /home/collinp/Documents/GitHub/pinepods-firewood/src/helpers/music_handler.rs:66:12
    |
66  |     pub fn play(&mut self, episode: &PinepodsEpisodes) {
    |            ^^^^
help: try removing the method call
    |
261 -                                 app.music_handle.play(i.clone());
261 +                                 app.music_handle.play(i);
    |

warning: unused variable: `feed_url`
   --> src/app.rs:119:40
    |
119 |             ContentState::PodcastMode {feed_url} => {
    |                                        ^^^^^^^^ help: try ignoring the field: `feed_url: _`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `podcast_id`
   --> src/app.rs:138:41
    |
138 |             ContentState::EpisodeMode { podcast_id } => {
    |                                         ^^^^^^^^^^ help: try ignoring the field: `podcast_id: _`

warning: unused variable: `episode_url`
   --> src/app.rs:143:21
    |
143 |                 let episode_url = selected_episode.EpisodeURL.clone();
    |                     ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_episode_url`

warning: unused variable: `episode_duration`
   --> src/app.rs:144:21
    |
144 |                 let episode_duration = selected_episode.EpisodeDuration.clone();
    |                     ^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_episode_duration`

warning: unused variable: `listen_duration`
   --> src/app.rs:145:21
    |
145 |                 let listen_duration = selected_episode.ListenDuration.clone();
    |                     ^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_listen_duration`

warning: variable does not need to be mutable
   --> src/app.rs:127:21
    |
127 |                 let mut pinepods_values = self.pinepods_values.lock().unwrap();
    |                     ----^^^^^^^^^^^^^^^
    |                     |
    |                     help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

error[E0308]: mismatched types
   --> src/app.rs:177:20
    |
177 |             if let Some(episode) = self.queue_items.pop() {
    |                    ^^^^^^^^^^^^^   ---------------------- this expression has type `PinepodsEpisodes`
    |                    |
    |                    expected `PinepodsEpisodes`, found `Option<_>`
    |
    = note: expected struct `PinepodsEpisodes`
                 found enum `std::option::Option<_>`
help: you might have meant to use field `PodcastName` whose type is `std::option::Option<std::string::String>`
    |
177 |             if let Some(episode) = self.queue_items.pop().PodcastName {
    |                                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

warning: unused import: `Stylize`
  --> src/main.rs:21:33
   |
21 |     prelude::{CrosstermBackend, Stylize, Terminal, Backend},
   |                                 ^^^^^^^

warning: unused import: `Write`
  --> src/main.rs:32:15
   |
32 | use std::io::{Write, stderr, Result};
   |               ^^^^^

For more information about this error, try `rustc --explain E0308`.
warning: `pinepods_firewood` (bin "pinepods_firewood") generated 20 warnings
error: could not compile `pinepods_firewood` (bin "pinepods_firewood") due to 3 previous errors; 20 warnings emitted
